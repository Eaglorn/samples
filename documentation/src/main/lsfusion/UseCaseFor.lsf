MODULE UseCaseFor;

REQUIRE Utils;

//#sample1
CLASS Book 'Book';
name 'Name' = DATA ISTRING[50] (Book);

FORM books 'Books'
    OBJECTS b = Book
    PROPERTIES(b) name, NEW, DELETE
;

NAVIGATOR {
    NEW books;
}
//#sample1 end

//#solution1
findNemo 'Find book' ()  { 
    FOR isSubstring(name(Book b), 'Nemo') DO {
        MESSAGE 'Found book ' + name (b) + ' with internal code ' + b;
    } 
}
EXTEND FORM books
    PROPERTIES() findNemo
;
//#solution1 end

//#solution2
add100Books 'Add 100 books' ()  { 
    // Option 1
    FOR iterate(INTEGER i, 1, 100) NEW b = Book DO {
        name(b) <- 'Book ' + i;
    }
    
    // Option 2
    FOR iterate(INTEGER i, 1, 100) DO {
        NEW b = Book {
            name(b) <- 'Book ' + i;
        }
    }
}

EXTEND FORM books
    PROPERTIES() add100Books
;
//#solution2 end

//#sample3
CLASS Order 'Order';
  
CLASS OrderDetail 'Order line';
order 'Order' = DATA Order (OrderDetail) NONULL DELETE;
book 'Book' = DATA Book (OrderDetail);
nameBook 'Book' (OrderDetail d) = name(book(d));

price 'Price' = DATA NUMERIC[14,2] (OrderDetail);

discount 'Discount, %' = DATA NUMERIC[8,2] (OrderDetail);
discountPrice 'Discount price' = DATA NUMERIC[14,2] (OrderDetail); 
//#sample3 end

//#solution3
makeDiscount 'Make discount' (Order o)  { 
    // Option 1
    FOR order(OrderDetail d) == o AND price(d) > 100 DO {
        discount(d) <- 10;
        discountPrice(d) <- price(d) * (100.0 - discount(d)) / 100.0;
    }
    
    // Option 2
    discount(OrderDetail d) <- 10 WHERE order(d) == o AND price(d) > 100;
    discountPrice(OrderDetail d) <- price(d) * (100.0 - discount(d)) / 100.0 WHERE order(d) == o AND price(d) > 100; 
}
//#solution3 end

//#sample4
price 'Price' = DATA NUMERIC[14,2] (Book);
//#sample4 end

//#solution4
addSelectedBooks 'Add marked books' (Order o)  { 
    // Option 1
    FOR price(Book b) > 100 NEW d = OrderDetail DO {
        order(d) <- o;
        book(d) <- b;
        price(d) <- price(b);
    }

    // Option 2
    FOR price(Book b) == NUMERIC[14,2] p AND p > 100 NEW d = OrderDetail DO {
        order(d) <- o;
        book(d) <- b;
        price(d) <- p;
    }
}
//#solution4 end